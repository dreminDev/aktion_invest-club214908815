const { dbUser } = require("../../../domain/user/storage/mongo/managers/dbUserManagers");
const { dbPromocode } = require("../../../domain/user/storage/mongo/managers/dbPromocodeManagers");

const { Utils } = require("../../../../pkg/utils/utils");
const { handleError } = require("../../../../error/customError");



module.exports = async (msg) => {
    try {
        const userId = msg.userId || msg.senderId;

        const admin = await dbUser.getAdmins();

        if (!admin.includes(userId)) {
            return;
        };

        const name = await msg.question(
            'üìù –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞.'
        );

        const amountAnswer = await msg.question(
            'üí∞ –°–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç –∑–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é?'
        );

        const amount = amountAnswer.text;

        if (!Number(amount)) {
            throw new Error("not validation amount");
        };

        const countActivateAnswer = await msg.question(
            'üë• –ù–∞–ø–∏—à–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏'
        );

        const countActivate = countActivateAnswer.text;

        if (!Number(countActivate)) {
            throw new Error("not validation amount");
        };

        Promise.all([
            dbPromocode.add({
                promocode_name: name.text,
                promocode_count: countActivate,
                promocode_amount: amount,
            }), 

            msg.send(`üéâ –£—Å–ø–µ—à–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞.\n\n‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: ${name.text}\n‚Ä¢ –°—É–º–º–∞: ${Utils.formateNumberAddition(amount)}\n‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${countActivate}`),
        ]);
    } catch (error) {
        handleError(error, msg);
    };
};