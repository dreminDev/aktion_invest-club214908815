const { updates } = require("../../../../../internal/adapters/vk/vk");

const { dbUser } = require("../../../../../internal/domain/user/storage/mongo/managers/dbUserManagers");
const { vkShort } = require("../../../../../internal/adapters/vk/vkUtils");


function updatesDonutCreate() {
    updates.on('donut_subscription_create', async (msg) => {
        const userId = msg.userId;

        Promise.all([
            dbUser.incBuyPoint({ userId: userId, amount: 0, perDayInc: 84_000 }),
            dbUser.vkDonutStatus(userId, true),

            vkShort.sendMsg(userId, "üéâ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ ¬´VK Donut¬ª\n\n‚Ä¢ –í—ã–¥–∞–Ω–æ:\n+ –°—Ç–∞—Ç—É—Å ¬´–ê–∫—Ü–∏–æ–Ω–µ—Ä¬ª\n+ –î–æ—Å—Ç—É–ø –∫ –≤—ã–≤–æ–¥—É\n+ 10% –∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º—É –±–æ–Ω—É—Å—É\n+ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–±–∏—Ä–∞—Ç—å –¥–µ–Ω—å–≥–∏ —Å –±–∞–Ω–∫–∞\n+ –ë–æ–Ω—É—Å –∑–∞ –∫–∞–∂–¥—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (15$)\n+ –ê–∫—Ü–∏—è ¬´Tesla¬ª\n+ –î–æ—Å—Ç—É–ø –∫ –±–µ—Å–µ–¥–µ —Å –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏\n\n‚Ä¢ –£–±—Ä–∞–Ω–æ:\n- –ù–∞–ª–æ–≥–∏"),
        ]);
    });
};

function updatesDobutProlonged() {
    updates.on('donut_subscription_prolonged', async (msg) => {
        const userId = msg.userId;

        const { isPurchasedVkDonut } = await dbUser.get(userId, {
            _id: 0,
            isPurchasedVkDonut: 1,
        });

        vkShort.sendMsg(userId, "üéâ –£—Å–ø–µ—à–Ω–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏, —Ç–≤–æ–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –æ—Å—Ç–∞—é—Ç—Å—è —Å —Ç–æ–±–æ–π)");

        if (isPurchasedVkDonut) {
            dbUser.incBuyPoint({ userId: userId, amount: 0, perDayInc: 0 });
        };

        if (!isPurchasedVkDonut) {
            Promise.all([
                dbUser.incBuyPoint({ userId: userId, amount: 0, perDayInc: -84_000 }),
                dbUser.setPurchasedVkDonut(userId, true),
            ]);
        };
    });
};

function updatesDonutExpired() {
    updates.on('donut_subscription_expired', async (msg) => {
        const userId = msg.userId;

        vkShort.sendMsg(userId, "üö´ –û—Ç–∫–∞–∑ –æ—Ç –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏. –í—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –±—ã–ª–∏ –∏–∑—ä—è—Ç—ã.");

        if (isPurchasedVkDonut) {
            dbUser.incBuyPoint({ userId: userId, amount: 0, perDayInc: 0 });
        };

        if (!isPurchasedVkDonut) {
            Promise.all([
                dbUser.incBuyPoint({ userId: userId, amount: 0, perDayInc: -84_000 }),
                dbUser.setPurchasedVkDonut(userId, true),
                dbUser.vkDonutStatus(userId, false),
            ]);
        };
    });
};

function vkDonutStart() {
    updatesDonutCreate();
    updatesDonutExpired();
    updatesDobutProlonged();
};

module.exports = {
    vkDonutStart,
};